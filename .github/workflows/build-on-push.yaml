# This workflow file build the Godot project for multiple target systems.
---


# Build workflow
name: Build


# Trigger rules (adjust to configure when CI is performed)
on:
  [push, pull_request]


# Environment variables
env:
  # Configure Godot version
  GODOT_VERSION: 4.3.0
  
  # OpenXR Vendors version
  OPENXR_VENDORS_VERSION: 3.1.0-stable


# CI jobs
jobs:
  # Build job (Matrix build for all exports)
  build:
    name: Building for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          # Export for Windows
          - name: 🏁 Windows
            os: windows-latest
            platform: windows
            export-preset: Windows
            export-type: release
            export-folder: build/windows
            archive: Windows

          # Export for Linux
          - name: 🐧 Linux
            os: ubuntu-22.04
            platform: linux
            export-preset: Linux
            export-type: release
            export-folder: build/linux
            archive: Linux

          # Export for Android Quest
          - name: 🤖 Android Quest
            os: ubuntu-22.04
            platform: android
            export-preset: Android Quest
            export-type: debug
            export-args: --install-android-build-template
            export-folder: build/android-quest
            archive: Android-Quest

          # Export for Android Pico
          - name: 🤖 Android Pico
            os: ubuntu-22.04
            platform: android
            export-preset: Android Pico
            export-type: debug
            export-args: --install-android-build-template
            export-folder: build/android-pico
            archive: Android-Pico

          # Export for Android Magic Leap
          - name: 🤖 Android Magic Leap
            os: ubuntu-22.04
            platform: android
            export-preset: Android Magic Leap
            export-type: debug
            export-args: --install-android-build-template
            export-folder: build/android-magicleap
            archive: Android-MagicLeap

          # Export for Android Vive
          - name: 🤖 Android Vive
            os: ubuntu-22.04
            platform: android
            export-preset: Android Vive
            export-type: debug
            export-args: --install-android-build-template
            export-folder: build/android-vive
            archive: Android-Vive

          # Export for Android Lynx
          - name: 🤖 Android Lynx
            os: ubuntu-22.04
            platform: android
            export-preset: Android Lynx
            export-type: debug
            export-args: --install-android-build-template
            export-folder: build/android-lynx
            archive: Android-Lynx

          # Export for WebXR
          - name: 🌐 WebXR
            os: ubuntu-22.04
            platform: web
            export-preset: WebXR
            export-type: release
            export-folder: build/webxr
            archive: WebXR

    steps:
      # Check out the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Install the OpenXR Vendors Plugin
      - name: Install OpenXR Vendors Plugin
        shell: bash
        run: |
          curl -L -O https://github.com/GodotVR/godot_openxr_vendors/releases/download/${{ env.OPENXR_VENDORS_VERSION }}/godotopenxrvendorsaddon.zip
          unzip -o godotopenxrvendorsaddon.zip -d godotopenxrvendorsaddon
          mkdir addons
          mv godotopenxrvendorsaddon/asset/addons/godotopenxrvendors addons/godotopenxrvendors
          rm godotopenxrvendorsaddon.zip
          rm -rf godotopenxrvendorsaddon

      # If targeting android then install JDK
      - name: Set up JDK 17
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # If targeting android then install Android SDK
      - name: Setup Android SDK
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3

      # If targeting android then install Android SDK Packages
      - name: Install Android SDK Packages
        if: matrix.platform == 'android'
        run: >
          sdkmanager
          "platform-tools"
          "build-tools;34.0.0"
          "platforms;android-34"
          "cmdline-tools;latest"
          "cmake;3.10.2.4988404"
          "ndk;23.2.8568313"

      # Setup Godot
      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: ${{ env.GODOT_VERSION }}
          use-dotnet: false
          include-templates: true

      # Import Godot Project
      - name: Initial Godot Import
        shell: bash
        run: |
          godot --headless --import || exit 0

      # Export project
      - name: Export Godot Project
        shell: bash
        run: >
          godot
          --headless
          ${{ matrix.export-args }}
          --export-${{ matrix.export-type }} "${{ matrix.export-preset }}"

      # Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive }}-Artifacts
          path: |
            ${{ matrix.export-folder }}/*.*
            !**/.gitignore          

      # Compress project
      - name: Compress project
        run: |
          cd ${{ matrix.export-folder }}
          7z a -tzip ${{ matrix.archive }}.zip *.* -x'!.gitignore'

      # Publish release
      - uses: ncipollo/release-action@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          allowUpdates: true
          artifacts: '${{ matrix.export-folder }}/${{ matrix.archive }}.zip'
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}
